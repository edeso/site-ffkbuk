{
  hostname_prefix = 'ffkbuk-',
  site_name = 'Freifunk KBU Koeln',
  site_code = 'ffkbuk',

  -- 32 bytes of random data, encoded in hexacimal
  -- Must be the same of all nodes in one mesh domain
  -- Can be generated using: echo $(hexdump -v -n 32 -e '1/1 "%02x"' </dev/urandom)
  site_seed = '14bfe729c4df670fae689c0594f292682b33fbba5a78a2ba1184d01eaba8bc87',

  -- Prefixes used within the mesh. Both are required.
  prefix4 = '10.158.0.0/18',
  prefix6 = 'fdd3:5d16:b5dd:01fc::/64',

  -- Timezone of your community.
  -- See http://wiki.openwrt.org/doc/uci/system#time_zones
  timezone = 'CET-1CEST,M3.5.0,M10.5.0/3',

  -- List of NTP servers in your community.
  -- Must be reachable using IPv6!
  ntp_servers = {
    '0.de.pool.ntp.org',
    '1.de.pool.ntp.org',
    '2.de.pool.ntp.org',
    '3.de.pool.ntp.org',
    '0.openwrt.pool.ntp.org',
    '1.openwrt.pool.ntp.org',
    '2.openwrt.pool.ntp.org',
    '3.openwrt.pool.ntp.org',
  },

  -- Wireless regulatory domain of your community.
  regdom = 'DE',

  -- Wireless configuration for 2.4 GHz interfaces.
  wifi24 = {
    -- Wireless channel.
    channel = 1,
    ap = {
      -- ESSID used for client network.
      ssid = 'kbu.freifunk.net',
      -- disabled = true, (optional)
    },
    ibss = {
      ssid = '02:d2:22:01:fc:22',  -- ESSID used for mesh
      bssid = '02:d2:22:01:fc:22', -- BSSID used for mesh
      -- Bitrate used for multicast/broadcast packets.
      mcast_rate = 12000,
      -- disabled = true, (optional)
    },
  },

  -- Wireless configuration for 5 GHz interfaces.
  -- This should be equal to the 2.4 GHz variant, except for channel.
  wifi5 = {
    channel = 44,
    ap = {
      ssid = 'kbu.freifunk.net',
    },
    ibss = {
      ssid = '02:d2:22:01:fc:23',  -- ESSID used for mesh
      bssid = '02:d2:22:01:fc:23', -- BSSID used for mesh
      -- Bitrate used for multicast/broadcast packets.
      mcast_rate = 12000,
    },
  },

  -- The next node feature allows clients to always reach the node it is
  -- connected to using a known IP address.
  next_node = {
    -- anycast IPs of all nodes
    ip4 = '10.158.0.3',
    ip6 = 'fdd3:5d16:b5dd:01fc::01fc',
    -- anycast MAC of all nodes
    mac = '16:42:23:20:15:69',
  },

  -- Options specific to routing protocols (optional)
  -- mesh = {
    -- Options specific to the batman-adv routing protocol (optional)
    -- batman_adv = {
      -- Gateway selection class (optional)
      -- The default class 20 is based on the link quality (TQ) only,
      -- class 1 is calculated from both the TQ and the announced bandwidth
      -- gw_sel_class = 1,
    -- },
  -- },
  mesh_vpn = {
    mtu = 1312,
    enabled = true,
    fastd = {
      -- Refer to http://fastd.readthedocs.org/en/latest/ to better understand
      -- what these options do.
      -- List of crypto-methods to use.
      methods = {'salsa2012+umac'},
      configurable = true,
      -- syslog_level = 'warn',

      groups = {
        backbone = {
          -- Limit number of connected peers to reduce bandwidth.
          limit = 1,
          peers = {
            peer1 = {
              key = 'ae120edbbd07dce57c2ed6ebefd112886a1416322e7a98352866eed1e0d633cc',
              remotes = {
                'ipv4 "vpn1.kbu.freifunk.net" port 10010',
                'ipv4 "vpn1.ffkbu.de" port 10010'
              },
            },
            peer2 = {
              key = '3e01de6c771cf5a50375de4f05e51f7d9251b5659ab9fb54040bf41df411ae46',
              remotes = {
                'ipv4 "vpn2.kbu.freifunk.net" port 10010',
                'ipv4 "vpn2.ffkbu.de" port 10010'
              },
            },
            peer3 = {
              key = 'c46d7e141b60be6e57ada3087f1b25beb0bfb51e6b42d1c7f02a067d89c13a1a',
              remotes = {
                'ipv4 "vpn3.kbu.freifunk.net" port 10010',
                'ipv4 "vpn3.ffkbu.de" port 10010'
              },
            },
            peer4 = {
              key = 'f4aff2422921822102ed6e67807b0b5db334f04e071356d30fe6c927b8bb9839',
              remotes = {
                'ipv4 "vpn4.kbu.freifunk.net" port 10010',
                'ipv4 "vpn4.ffkbu.de" port 10010'
              },
            },
            peer5 = {
              key = 'a6df938cfde83b437346c91e2e548516a25321fb72820f9f757d9479240e26af',
              remotes = {
                'ipv4 "vpn5.kbu.freifunk.net" port 10009',
                'ipv4 "vpn5.ffkbu.de" port 10009'
              },
            },
            peer6 = {
              key = 'f125456692a9804885ebc33375d0de6ac934b317fc45682849019704d8ee830d',
              remotes = {
                'ipv4 "vpn6.kbu.freifunk.net" port 10009',
                'ipv4 "vpn6.ffkbu.de" port 10009'
              },
            },
            peer7 = {
              key = '389e8ebdf7a7329279b2eb006bd3cf92691eb26f3518e1c596b8634c9f0a3002',
              remotes = {
                'ipv4 "vpn7.kbu.freifunk.net" port 10009',
                'ipv4 "vpn7.ffkbu.de" port 10009'
              },
            },
            peer8 = {
              key = 'f9dddb5a3f184fc3b10a6b16205c2392be4d11ae0af4901cb901f7f0d103333a',
              remotes = {
                'ipv4 "vpn8.kbu.freifunk.net" port 10009',
                'ipv4 "vpn8.ffkbu.de" port 10009'
              },
            },
          },
        },
      },
    },
    bandwidth_limit = {
      -- The bandwidth limit can be enabled by default here.
      enabled = false,
      -- Default upload limit (kbit/s).
      egress = 200,
      -- Default download limit (kbit/s).
      ingress = 3000,
    },
  },

  autoupdater = {
    -- Default branch. Don't forget to set GLUON_BRANCH when building!
    branch = 'noupdate',
    enabled = false,

    -- List of branches. You may define multiple branches.
    branches = {
      noupdate = {
        name = 'noupdate',

        -- List of mirrors to fetch images from. IPv6 required!
        mirrors = {'http://'},

        -- Number of good signatures required.
        -- Have multiple maintainers sign your build and only
        -- accept it when a sufficient number of them have
        -- signed it.
        good_signatures = 9999,

        -- List of public keys of maintainers.
        pubkeys = {
          '0000000000000000000000000000000000000000000000000000000000000000', -- Alice
          '1111111111111111111111111111111111111111111111111111111111111111', -- Bob
          '2222222222222222222222222222222222222222222222222222222222222222', -- Mary
        },
      },
    },
  },

  -- Node roles
  -- roles = {
  --   default = 'node',
  --   list = {
  --     'node',
  --     'test',
  --     'backbone',
  --     'service',
  --   },
  -- },

  -- Skip setup mode (config mode) on first boot
  setup_mode = {
    skip = false,
  },
  config_mode = {
    remote_login = {
      show_password_form = true, -- default false
      min_password_length = 12
    },
    -- Show/hide the altitude field
    geo_location = {
      show_altitude = false,
    },
    -- define if the contact field is obligatory (optional)
    -- owner = {
      -- obligatory = true
    -- },
  },
}
